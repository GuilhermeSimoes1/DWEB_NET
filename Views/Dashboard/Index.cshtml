@model DWEB_NET.Models.ViewModels.DashboardViewModel

@{
    ViewData["Title"] = "Dashboard";
}

<div class="container">
    <div class="row">
        <div class="col-lg-3 col-sm-6">
            <div class="card card-stats">
                <div class="card-body">
                    <div class="row">
                        <div class="col-xs-5">
                            <div class="icon-big text-center icon-warning">
                                <i class="nc-icon nc-light-3 text-success"></i>
                            </div>
                        </div>
                        <div class="col-xs-7">
                            <div class="numbers">
                                <p class="card-category">Valor da conta</p>
                                <h4 class="card-title">@Model.AccountValue.ToString("C") EUR</h4>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-footer">
                    <hr />
                    <div class="stats">
                        <i class="far fa-calendar-alt mr-1"></i>
                        Último dia
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <form action="@Url.Action("Confirm", "Dashboard")" method="post">
                <div class="form-group">
                    <label for="formValor">Valor</label>
                    <input type="number" class="form-control" id="formValor" name="Value" value="@Model.InputValue" placeholder="Digite o valor" />
                </div>
                <div class="form-group">
                    <label for="formTransactionType">Tipo de Transação</label>
                    <select class="form-control" id="formTransactionType" name="Type">
                        <option value="">Selecione o tipo de transação</option>
                        <option value="ganho">Ganho</option>
                        <option value="gasto">Gasto</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="formDescricao">Descrição</label>
                    <input type="text" class="form-control" id="formDescricao" name="Descricao" value="@Model.Descricao" placeholder="Descrição" />
                </div>
                <button type="submit" class="btn btn-success">Confirmar</button>
            </form>
        </div>
        <div class="col-lg-6">
            @if (!string.IsNullOrEmpty(Model.SelectedTransactionType))
            {
                if (Model.SelectedTransactionType == "ganho")
                {
                    <canvas id="chartGanho" width="400" height="400"></canvas>
                    <script>
                        // Script para renderizar o gráfico de rosquinha para ganhos
                        var ctxGanho = document.getElementById('chartGanho').getContext('2d');
                        var myChartGanho = new Chart(ctxGanho, {
                            type: 'doughnut',
                            data: {
                                labels: @Html.Raw(Json.Serialize(Model.RendasDataGanho.Labels)),
                                datasets: [{
                                    data: @Html.Raw(Json.Serialize(Model.RendasDataGanho.Datasets[0].Data)),
                                    backgroundColor: @Html.Raw(Json.Serialize(Model.RendasDataGanho.Datasets[0].BackgroundColor)),
                                    hoverBackgroundColor: @Html.Raw(Json.Serialize(Model.RendasDataGanho.Datasets[0].HoverBackgroundColor))
                                                        }]
                            },
                            options: {
                                responsive: true
                            }
                        });
                    </script>
                }
                else if (Model.SelectedTransactionType == "gasto")
                {
                    <canvas id="chartGasto" width="400" height="400"></canvas>
                    <script>
                        // Script para renderizar o gráfico de rosquinha para gastos
                        var ctxGasto = document.getElementById('chartGasto').getContext('2d');
                        var myChartGasto = new Chart(ctxGasto, {
                            type: 'doughnut',
                            data: {
                                labels: @Html.Raw(Json.Serialize(Model.RendasDataGasto.Labels)),
                                datasets: [{
                                    data: @Html.Raw(Json.Serialize(Model.RendasDataGasto.Datasets[0].Data)),
                                    backgroundColor: @Html.Raw(Json.Serialize(Model.RendasDataGasto.Datasets[0].BackgroundColor)),
                                    hoverBackgroundColor: @Html.Raw(Json.Serialize(Model.RendasDataGasto.Datasets[0].HoverBackgroundColor))
                                                        }]
                            },
                            options: {
                                responsive: true
                            }
                        });
                    </script>
                }
            }
        </div>
    </div>
</div>
